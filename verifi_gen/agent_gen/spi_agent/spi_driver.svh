//
// Note:
// This file is generated by Mako Template
//-----------------------------------------
// spi driver
//
`ifndef SPI_DRIVER_SVH
`define SPI_DRIVER_SVH
class spi_driver extends uvm_driver #(spi_seq_item, spi_seq_item);
  `uvm_component_utils(spi_driver)

  virtual apb_if apb_vif;
  virtual mac_if mac_vif;
  
  spi_seq_item data_pkt;
  uvm_analysis_port #(spi_seq_item) ap;
  
  function new (string name = "spi_driver", uvm_component parent = null);
    super.new(name, parent);
  endfunction // new

  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    //get i/f

    if (!uvm_config_db #(virtual apb_if)::get(this, "", "apb_vif", apb_vif) )
      `uvm_fatal(this.get_name(), 
		 "Cannot get 'apb_vif' from uvm_config_db")
    if (!uvm_config_db #(virtual mac_if)::get(this, "", "mac_vif", mac_vif) )
      `uvm_fatal(this.get_name(), 
		 "Cannot get 'mac_vif' from uvm_config_db")
    
    ap = new("ap",this);
  endfunction // build_phase

  task main_phase(uvm_phase phase);
    //get seq and drive
    forever
      begin
	seq_item_port.get_next_item(data_pkt);

	//
	//add driver logic here:
	//
	
	seq_item_port.item_done();
      end
  
  endtask // main_phase
  
  
endclass // spi_driver
`endif //SPI_DRIVER_SVH
